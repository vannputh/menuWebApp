export declare const EMV: Readonly<{
    PAYLOAD_FORMAT_INDICATOR: "00";
    POINT_OF_INITIATION_METHOD: "01";
    STATIC_QR: "11";
    DYNAMIC_QR: "12";
    MERCHANT_ACCOUNT_INFORMATION_INDIVIDUAL: "29";
    MERCHANT_ACCOUNT_INFORMATION_MERCHANT: "30";
    BAKONG_ACCOUNT_IDENTIFIER: "00";
    MERCHANT_ACCOUNT_INFORMATION_MERCHANT_ID: "01";
    INDIVIDUAL_ACCOUNT_INFORMATION: "01";
    MERCHANT_ACCOUNT_INFORMATION_ACQUIRING_BANK: "02";
    MERCHANT_CATEGORY_CODE: "52";
    TRANSACTION_CURRENCY: "53";
    TRANSACTION_AMOUNT: "54";
    COUNTRY_CODE: "58";
    MERCHANT_NAME: "59";
    MERCHANT_CITY: "60";
    CRC: "63";
    CRC_LENGTH: "04";
    ADDITIONAL_DATA_TAG: "62";
    BILLNUMBER_TAG: "01";
    ADDITIONAL_DATA_FIELD_MOBILE_NUMBER: "02";
    STORELABEL_TAG: "03";
    TERMINAL_TAG: "07";
    PURPOSE_OF_TRANSACTION: "08";
    TIMESTAMP_TAG: "99";
    MERCHANT_INFORMATION_LANGUAGE_TEMPLATE: "64";
    LANGUAGE_PREFERENCE: "00";
    MERCHANT_NAME_ALTERNATE_LANGUAGE: "01";
    MERCHANT_CITY_ALTERNATE_LANGUAGE: "02";
    UNIONPAY_MERCHANT_ACCOUNT: "15";
    DEFAULT_PAYLOAD_FORMAT_INDICATOR: "01";
    DEFAULT_MERCHANT_CATEGORY_CODE: "5999";
    DEFAULT_TRANSACTION_AMOUNT: "0";
    DEFAULT_COUNTRY_CODE: "KH";
    DEFAULT_MERCHANT_CITY: "Phnom Penh";
    INVALID_LENGTH: {
        KHQR: number;
        MERCHANT_NAME: number;
        BAKONG_ACCOUNT: number;
        AMOUNT: number;
        COUNTRY_CODE: number;
        MERCHANT_CATEGORY_CODE: number;
        MERCHANT_CITY: number;
        TIMESTAMP: number;
        TRANSACTION_AMOUNT: number;
        TRANSACTION_CURRENCY: number;
        BILL_NUMBER: number;
        STORE_LABEL: number;
        TERMINAL_LABEL: number;
        PURPOSE_OF_TRANSACTION: number;
        MERCHANT_ID: number;
        ACQUIRING_BANK: number;
        MOBILE_NUMBER: number;
        ACCOUNT_INFORMATION: number;
        MERCHANT_INFORMATION_LANGUAGE_TEMPLATE: number;
        UPI_MERCHANT: number;
        LANGUAGE_PREFERENCE: number;
        MERCHANT_NAME_ALTERNATE_LANGUAGE: number;
        MERCHANT_CITY_ALTERNATE_LANGUAGE: number;
    };
}>;
export declare const ERROR_CODE: Readonly<{
    BAKONG_ACCOUNT_ID_REQUIRED: {
        code: number;
        message: string;
    };
    MERCHANT_NAME_REQUIRED: {
        code: number;
        message: string;
    };
    BAKONG_ACCOUNT_ID_INVALID: {
        code: number;
        message: string;
    };
    TRANSACTION_AMOUNT_INVALID: {
        code: number;
        message: string;
    };
    MERCHANT_TYPE_REQUIRED: {
        code: number;
        message: string;
    };
    BAKONG_ACCOUNT_ID_LENGTH_INVALID: {
        code: number;
        message: string;
    };
    MERCHANT_NAME_LENGTH_INVALID: {
        code: number;
        message: string;
    };
    KHQR_INVALID: {
        code: number;
        message: string;
    };
    CURRENCY_TYPE_REQUIRED: {
        code: number;
        message: string;
    };
    BILL_NUMBER_LENGTH_INVALID: {
        code: number;
        message: string;
    };
    STORE_LABEL_LENGTH_INVALID: {
        code: number;
        message: string;
    };
    TERMINAL_LABEL_LENGTH_INVALID: {
        code: number;
        message: string;
    };
    CONNECTION_TIMEOUT: {
        code: number;
        message: string;
    };
    INVALID_DEEP_LINK_SOURCE_INFO: {
        code: number;
        message: string;
    };
    INTERNAL_SREVER: {
        code: number;
        message: string;
    };
    PAYLOAD_FORMAT_INDICATOR_LENGTH_INVALID: {
        code: number;
        message: string;
    };
    POINT_INITIATION_LENGTH_INVALID: {
        code: number;
        message: string;
    };
    MERCHANT_CODE_LENGTH_INVALID: {
        code: number;
        message: string;
    };
    TRANSACTION_CURRENCY_LENGTH_INVALID: {
        code: number;
        message: string;
    };
    COUNTRY_CODE_LENGTH_INVALID: {
        code: number;
        message: string;
    };
    MERCHANT_CITY_LENGTH_INVALID: {
        code: number;
        message: string;
    };
    CRC_LENGTH_INVALID: {
        code: number;
        message: string;
    };
    PAYLOAD_FORMAT_INDICATOR_TAG_REQUIRED: {
        code: number;
        message: string;
    };
    CRC_TAG_REQUIRED: {
        code: number;
        message: string;
    };
    MERCHANT_CATEGORY_TAG_REQUIRED: {
        code: number;
        message: string;
    };
    COUNTRY_CODE_TAG_REQUIRED: {
        code: number;
        message: string;
    };
    MERCHANT_CITY_TAG_REQUIRED: {
        code: number;
        message: string;
    };
    UNSUPPORTED_CURRENCY: {
        code: number;
        message: string;
    };
    INVALID_DEEP_LINK_URL: {
        code: number;
        message: string;
    };
    MERCHANT_ID_REQUIRED: {
        code: number;
        message: string;
    };
    ACQUIRING_BANK_REQUIRED: {
        code: number;
        message: string;
    };
    MERCHANT_ID_LENGTH_INVALID: {
        code: number;
        message: string;
    };
    ACQUIRING_BANK_LENGTH_INVALID: {
        code: number;
        message: string;
    };
    MOBILE_NUMBER_LENGTH_INVALID: {
        code: number;
        message: string;
    };
    ACCOUNT_INFORMATION_LENGTH_INVALID: {
        code: number;
        message: string;
    };
    TAG_NOT_IN_ORDER: {
        code: number;
        message: string;
    };
    LANGUAGE_PREFERENCE_REQUIRED: {
        code: number;
        message: string;
    };
    LANGUAGE_PREFERENCE_LENGTH_INVALID: {
        code: number;
        message: string;
    };
    MERCHANT_NAME_ALTERNATE_LANGUAGE_REQUIRED: {
        code: number;
        message: string;
    };
    MERCHANT_NAME_ALTERNATE_LANGUAGE_LENGTH_INVALID: {
        code: number;
        message: string;
    };
    MERCHANT_CITY_ALTERNATE_LANGUAGE_LENGTH_INVALID: {
        code: number;
        message: string;
    };
    PURPOSE_OF_TRANSACTION_LENGTH_INVALID: {
        code: number;
        message: string;
    };
    UPI_ACCOUNT_INFORMATION_LENGTH_INVALID: {
        code: number;
        message: string;
    };
}>;
export type KHQRTagType = {
    tag: string;
    sub?: boolean;
    type: string;
    required: boolean;
    instance: any;
};
export declare const KHQR_TAG: KHQRTagType[];
export declare const KHQR_SUBTAG: Readonly<{
    input: ({
        tag: string;
        data: {
            bakongAccountID: null;
            accountInformation: null;
            merchantID?: undefined;
            acquiringBank?: undefined;
            billNumber?: undefined;
            mobileNumber?: undefined;
            storeLabel?: undefined;
            terminalLabel?: undefined;
            purposeOfTransaction?: undefined;
            languagePreference?: undefined;
            merchantNameAlternateLanguage?: undefined;
            merchantCityAlternateLanguage?: undefined;
        };
    } | {
        tag: string;
        data: {
            bakongAccountID: null;
            merchantID: null;
            acquiringBank: null;
            accountInformation?: undefined;
            billNumber?: undefined;
            mobileNumber?: undefined;
            storeLabel?: undefined;
            terminalLabel?: undefined;
            purposeOfTransaction?: undefined;
            languagePreference?: undefined;
            merchantNameAlternateLanguage?: undefined;
            merchantCityAlternateLanguage?: undefined;
        };
    } | {
        tag: string;
        data: {
            billNumber: null;
            mobileNumber: null;
            storeLabel: null;
            terminalLabel: null;
            purposeOfTransaction: null;
            bakongAccountID?: undefined;
            accountInformation?: undefined;
            merchantID?: undefined;
            acquiringBank?: undefined;
            languagePreference?: undefined;
            merchantNameAlternateLanguage?: undefined;
            merchantCityAlternateLanguage?: undefined;
        };
    } | {
        tag: string;
        data: {
            languagePreference: null;
            merchantNameAlternateLanguage: null;
            merchantCityAlternateLanguage: null;
            bakongAccountID?: undefined;
            accountInformation?: undefined;
            merchantID?: undefined;
            acquiringBank?: undefined;
            billNumber?: undefined;
            mobileNumber?: undefined;
            storeLabel?: undefined;
            terminalLabel?: undefined;
            purposeOfTransaction?: undefined;
        };
    })[];
    compare: ({
        tag: string;
        subTag: "00";
        name: string;
    } | {
        tag: string;
        subTag: "01";
        name: string;
    } | {
        tag: string;
        subTag: "02";
        name: string;
    } | {
        tag: string;
        subTag: "03";
        name: string;
    } | {
        tag: string;
        subTag: "08";
        name: string;
    } | {
        tag: string;
        subTag: "07";
        name: string;
    })[];
}>;
type CurrencyKey = 'USD' | 'KHR' | 'THB' | 'LAK' | 'VND' | 'MYR' | 'MMK' | 'BND' | 'PHP' | 'SGD' | 'IDR' | 'INR' | 'CNY' | 'AUD' | 'CZK' | 'EUR';
export declare const CURRENCY: {
    [K in CurrencyKey]: string;
};
export declare const COUNTRY: {
    [K in 'KH' | 'TH' | 'LA' | 'VN' | 'MY' | 'MM' | 'BN' | 'PH' | 'SG' | 'ID' | 'IN' | 'CN' | 'AU' | 'CZ' | 'FR']: string;
};
type TagKey = 'MERCHANT' | 'INDIVIDUAL' | 'TAG_02' | 'TAG_03' | 'TAG_04' | 'TAG_05' | 'TAG_06' | 'TAG_07' | 'TAG_08' | 'TAG_09' | 'TAG_10' | 'TAG_11' | 'TAG_12' | 'TAG_13' | 'TAG_14' | 'TAG_15' | 'TAG_16' | 'TAG_17' | 'TAG_18' | 'TAG_19' | 'TAG_20' | 'TAG_21' | 'TAG_22' | 'TAG_23' | 'TAG_24' | 'TAG_25' | 'TAG_26' | 'TAG_27' | 'TAG_28' | 'TAG_29' | 'TAG_30' | 'TAG_31' | 'TAG_32' | 'TAG_33' | 'TAG_34' | 'TAG_35' | 'TAG_36' | 'TAG_37' | 'TAG_38' | 'TAG_39' | 'TAG_40' | 'TAG_41' | 'TAG_42' | 'TAG_43' | 'TAG_44' | 'TAG_45' | 'TAG_46' | 'TAG_47' | 'TAG_48' | 'TAG_49' | 'TAG_50' | 'TAG_51';
export declare const TAG: {
    [K in TagKey]: string;
};
export {};
