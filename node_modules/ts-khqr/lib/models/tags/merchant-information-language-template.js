"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MerchantInformationLanguageTemplate = void 0;
const constants_1 = require("../../constants");
const utils_1 = require("../../utils");
const tag_length_string_1 = require("./base/tag-length-string");
class MerchantInformationLanguageTemplate extends tag_length_string_1.TagLengthString {
    constructor(tag, obj = {}) {
        let languagePreference;
        let merchantNameAlternateLanguage;
        let merchantCityAlternateLanguage;
        if (obj.languagePreference && !obj.merchantNameAlternateLanguage) {
            throw (0, utils_1.response)(null, constants_1.ERROR_CODE.MERCHANT_NAME_ALTERNATE_LANGUAGE_REQUIRED);
        }
        let merchantInformationLanguageTemplateString = '';
        languagePreference = new LanguagePreference(constants_1.EMV.LANGUAGE_PREFERENCE, obj.languagePreference);
        merchantInformationLanguageTemplateString += languagePreference.toString();
        if (obj.merchantNameAlternateLanguage !== undefined && obj.merchantNameAlternateLanguage !== null) {
            merchantNameAlternateLanguage = new MerchantNameAlternateLanguage(constants_1.EMV.MERCHANT_NAME_ALTERNATE_LANGUAGE, obj.merchantNameAlternateLanguage);
            merchantInformationLanguageTemplateString += merchantNameAlternateLanguage.toString();
        }
        if (obj.merchantCityAlternateLanguage !== undefined && obj.merchantCityAlternateLanguage !== null) {
            merchantCityAlternateLanguage = new MerchantCityAlternateLanguage(constants_1.EMV.MERCHANT_CITY_ALTERNATE_LANGUAGE, obj.merchantCityAlternateLanguage);
            merchantInformationLanguageTemplateString += merchantCityAlternateLanguage.toString();
        }
        super(tag, merchantInformationLanguageTemplateString);
        this.data = {
            languagePreference,
            merchantNameAlternateLanguage,
            merchantCityAlternateLanguage,
        };
    }
}
exports.MerchantInformationLanguageTemplate = MerchantInformationLanguageTemplate;
class LanguagePreference extends tag_length_string_1.TagLengthString {
    constructor(tag, value) {
        if (utils_1.StringUtils.isEmpty(value) || String(value).length > constants_1.EMV.INVALID_LENGTH.LANGUAGE_PREFERENCE) {
            throw (0, utils_1.response)(null, constants_1.ERROR_CODE.LANGUAGE_PREFERENCE_LENGTH_INVALID);
        }
        super(tag, String(value));
    }
}
class MerchantNameAlternateLanguage extends tag_length_string_1.TagLengthString {
    constructor(tag, value) {
        if (utils_1.StringUtils.isEmpty(value) || String(value).length > constants_1.EMV.INVALID_LENGTH.MERCHANT_NAME_ALTERNATE_LANGUAGE) {
            throw (0, utils_1.response)(null, constants_1.ERROR_CODE.MERCHANT_NAME_ALTERNATE_LANGUAGE_LENGTH_INVALID);
        }
        super(tag, String(value));
    }
}
class MerchantCityAlternateLanguage extends tag_length_string_1.TagLengthString {
    constructor(tag, value) {
        if (utils_1.StringUtils.isEmpty(value) || String(value).length > constants_1.EMV.INVALID_LENGTH.MERCHANT_CITY_ALTERNATE_LANGUAGE) {
            throw (0, utils_1.response)(null, constants_1.ERROR_CODE.MERCHANT_CITY_ALTERNATE_LANGUAGE_LENGTH_INVALID);
        }
        super(tag, String(value));
    }
}
